
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNARleftUNIRleftORleftANDnonassocMAYORMENORMAYORIGUALMENORIGUALIGUALDESIGUALrightNOTleftSUMARESTAleftMULTIPLICACIONDIVISIONleftMODULOrightMENOSAND ASIGNAR CADENA COMA CONQUISTAR DECREE DESIGUAL DIVISION ELSE FOR IDENTIFICADOR IF IGUAL INQUIRE LLAVEDER LLAVEIZQ MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO MULTIPLICACION NOT NUMERO OR PARDER PARIAS PARIZQ PRINT PUNTOYCOMA RESTA SUMA UNIR WHILE YIELDinicio : \n              | sentencia inicio\n              | declaracion_funcion iniciosentencia : asignacion PUNTOYCOMA\n                   | expresion PUNTOYCOMA\n                   | condicional\n                   | print PUNTOYCOMA\n                   | ciclo\n                   | sentencia_yielddeclaracion_funcion : DECREE IDENTIFICADOR PARIZQ parametros_opcionales PARDER LLAVEIZQ bloque LLAVEDERparametros_opcionales : \n                             | parametros_listparametros_list : IDENTIFICADOR\n                       | IDENTIFICADOR COMA parametros_listsentencia_yield : YIELD expresion PUNTOYCOMA\n                       | YIELD PUNTOYCOMAasignacion : IDENTIFICADOR ASIGNAR expresionexpresion : expresion UNIR expresionexpresion : expresion SUMA expresion\n                 | expresion RESTA expresion\n                 | expresion MULTIPLICACION expresion\n                 | expresion DIVISION expresion\n                 | expresion MODULO expresionexpresion : expresion MAYOR expresion\n                 | expresion MENOR expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion IGUAL expresion\n                 | expresion DESIGUAL expresion\n                 | expresion AND expresion\n                 | expresion OR expresion\n                 | NOT expresioncondicional : IF PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER\n                   | IF PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER ELSE LLAVEIZQ bloque LLAVEDERciclo : WHILE PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER\n             | FOR PARIZQ asignacion PUNTOYCOMA expresion PUNTOYCOMA asignacion PARDER LLAVEIZQ bloque LLAVEDERbloque : \n              | sentencia bloqueexpresion : PARIZQ expresion PARDERexpresion : CADENAexpresion : NUMEROexpresion : IDENTIFICADORexpresion : MENOS expresion %prec MENOSexpresiones_list : expresion\n                        | expresion COMA expresiones_listargumentos_opcionales : \n                             | expresiones_listprint : PRINT PARIZQ expresiones_list PARDERexpresion : PARIAS PARIZQ IDENTIFICADOR PARDERexpresion : INQUIRE PARIZQ expresion PARDERexpresion : CONQUISTAR PARIZQ expresion COMA expresion COMA expresion PARDERexpresion : IDENTIFICADOR PARIZQ argumentos_opcionales PARDER'
    
_lr_action_items = {'$end':([0,1,2,3,6,8,9,25,26,27,28,43,59,88,117,119,121,129,130,],[-1,0,-1,-1,-6,-8,-9,-2,-3,-4,-5,-7,-16,-15,-33,-35,-10,-34,-36,]),'DECREE':([0,2,3,6,8,9,27,28,43,59,88,117,119,121,129,130,],[10,10,10,-6,-8,-9,-4,-5,-7,-16,-15,-33,-35,-10,-34,-36,]),'IDENTIFICADOR':([0,2,3,6,8,9,10,12,13,16,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,51,52,53,54,55,56,57,59,74,88,93,96,100,101,105,106,109,110,112,114,117,119,121,125,126,129,130,],[11,11,11,-6,-8,-9,44,48,48,48,48,-4,-5,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-7,48,48,80,48,48,48,48,48,87,-16,89,-15,48,48,48,89,11,11,11,48,11,87,-33,-35,-10,11,11,-34,-36,]),'NOT':([0,2,3,6,8,9,12,13,16,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,52,53,54,55,56,59,88,93,96,100,105,106,109,110,112,117,119,121,125,126,129,130,],[13,13,13,-6,-8,-9,13,13,13,13,-4,-5,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-7,13,13,13,13,13,13,13,-16,-15,13,13,13,13,13,13,13,13,-33,-35,-10,13,13,-34,-36,]),'PARIZQ':([0,2,3,6,8,9,11,12,13,16,17,18,19,20,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,52,53,54,55,56,59,88,93,96,100,105,106,109,110,112,117,119,121,125,126,129,130,],[12,12,12,-6,-8,-9,46,12,12,12,51,52,53,54,55,56,57,12,-4,-5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-7,74,12,12,46,12,12,12,12,12,-16,-15,12,12,12,12,12,12,12,12,-33,-35,-10,12,12,-34,-36,]),'CADENA':([0,2,3,6,8,9,12,13,16,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,52,53,54,55,56,59,88,93,96,100,105,106,109,110,112,117,119,121,125,126,129,130,],[14,14,14,-6,-8,-9,14,14,14,14,-4,-5,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-7,14,14,14,14,14,14,14,-16,-15,14,14,14,14,14,14,14,14,-33,-35,-10,14,14,-34,-36,]),'NUMERO':([0,2,3,6,8,9,12,13,16,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,52,53,54,55,56,59,88,93,96,100,105,106,109,110,112,117,119,121,125,126,129,130,],[15,15,15,-6,-8,-9,15,15,15,15,-4,-5,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-7,15,15,15,15,15,15,15,-16,-15,15,15,15,15,15,15,15,15,-33,-35,-10,15,15,-34,-36,]),'MENOS':([0,2,3,6,8,9,12,13,16,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,52,53,54,55,56,59,88,93,96,100,105,106,109,110,112,117,119,121,125,126,129,130,],[16,16,16,-6,-8,-9,16,16,16,16,-4,-5,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-7,16,16,16,16,16,16,16,-16,-15,16,16,16,16,16,16,16,16,-33,-35,-10,16,16,-34,-36,]),'PARIAS':([0,2,3,6,8,9,12,13,16,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,52,53,54,55,56,59,88,93,96,100,105,106,109,110,112,117,119,121,125,126,129,130,],[17,17,17,-6,-8,-9,17,17,17,17,-4,-5,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-7,17,17,17,17,17,17,17,-16,-15,17,17,17,17,17,17,17,17,-33,-35,-10,17,17,-34,-36,]),'INQUIRE':([0,2,3,6,8,9,12,13,16,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,52,53,54,55,56,59,88,93,96,100,105,106,109,110,112,117,119,121,125,126,129,130,],[18,18,18,-6,-8,-9,18,18,18,18,-4,-5,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-7,18,18,18,18,18,18,18,-16,-15,18,18,18,18,18,18,18,18,-33,-35,-10,18,18,-34,-36,]),'CONQUISTAR':([0,2,3,6,8,9,12,13,16,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,52,53,54,55,56,59,88,93,96,100,105,106,109,110,112,117,119,121,125,126,129,130,],[19,19,19,-6,-8,-9,19,19,19,19,-4,-5,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-7,19,19,19,19,19,19,19,-16,-15,19,19,19,19,19,19,19,19,-33,-35,-10,19,19,-34,-36,]),'IF':([0,2,3,6,8,9,27,28,43,59,88,105,106,109,112,117,119,121,125,126,129,130,],[20,20,20,-6,-8,-9,-4,-5,-7,-16,-15,20,20,20,20,-33,-35,-10,20,20,-34,-36,]),'PRINT':([0,2,3,6,8,9,27,28,43,59,88,105,106,109,112,117,119,121,125,126,129,130,],[21,21,21,-6,-8,-9,-4,-5,-7,-16,-15,21,21,21,21,-33,-35,-10,21,21,-34,-36,]),'WHILE':([0,2,3,6,8,9,27,28,43,59,88,105,106,109,112,117,119,121,125,126,129,130,],[22,22,22,-6,-8,-9,-4,-5,-7,-16,-15,22,22,22,22,-33,-35,-10,22,22,-34,-36,]),'FOR':([0,2,3,6,8,9,27,28,43,59,88,105,106,109,112,117,119,121,125,126,129,130,],[23,23,23,-6,-8,-9,-4,-5,-7,-16,-15,23,23,23,23,-33,-35,-10,23,23,-34,-36,]),'YIELD':([0,2,3,6,8,9,27,28,43,59,88,105,106,109,112,117,119,121,125,126,129,130,],[24,24,24,-6,-8,-9,-4,-5,-7,-16,-15,24,24,24,24,-33,-35,-10,24,24,-34,-36,]),'PUNTOYCOMA':([4,5,7,11,14,15,24,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,79,86,92,94,95,98,107,122,],[27,28,43,-42,-40,-41,59,-42,-32,-43,88,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-17,-39,100,-52,-49,-50,-48,114,-51,]),'UNIR':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[29,-42,-40,-41,29,-42,-32,-43,29,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,29,29,-39,29,29,29,29,-52,-49,-50,29,29,29,-51,]),'SUMA':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[30,-42,-40,-41,30,-42,30,-43,30,30,-19,-20,-21,-22,-23,30,30,30,30,30,30,30,30,30,30,-39,30,30,30,30,-52,-49,-50,30,30,30,-51,]),'RESTA':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[31,-42,-40,-41,31,-42,31,-43,31,31,-19,-20,-21,-22,-23,31,31,31,31,31,31,31,31,31,31,-39,31,31,31,31,-52,-49,-50,31,31,31,-51,]),'MULTIPLICACION':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[32,-42,-40,-41,32,-42,32,-43,32,32,32,32,-21,-22,-23,32,32,32,32,32,32,32,32,32,32,-39,32,32,32,32,-52,-49,-50,32,32,32,-51,]),'DIVISION':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[33,-42,-40,-41,33,-42,33,-43,33,33,33,33,-21,-22,-23,33,33,33,33,33,33,33,33,33,33,-39,33,33,33,33,-52,-49,-50,33,33,33,-51,]),'MODULO':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[34,-42,-40,-41,34,-42,34,-43,34,34,34,34,34,34,-23,34,34,34,34,34,34,34,34,34,34,-39,34,34,34,34,-52,-49,-50,34,34,34,-51,]),'MAYOR':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[35,-42,-40,-41,35,-42,-32,-43,35,35,-19,-20,-21,-22,-23,None,None,None,None,None,None,35,35,35,35,-39,35,35,35,35,-52,-49,-50,35,35,35,-51,]),'MENOR':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[36,-42,-40,-41,36,-42,-32,-43,36,36,-19,-20,-21,-22,-23,None,None,None,None,None,None,36,36,36,36,-39,36,36,36,36,-52,-49,-50,36,36,36,-51,]),'MAYORIGUAL':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[37,-42,-40,-41,37,-42,-32,-43,37,37,-19,-20,-21,-22,-23,None,None,None,None,None,None,37,37,37,37,-39,37,37,37,37,-52,-49,-50,37,37,37,-51,]),'MENORIGUAL':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[38,-42,-40,-41,38,-42,-32,-43,38,38,-19,-20,-21,-22,-23,None,None,None,None,None,None,38,38,38,38,-39,38,38,38,38,-52,-49,-50,38,38,38,-51,]),'IGUAL':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[39,-42,-40,-41,39,-42,-32,-43,39,39,-19,-20,-21,-22,-23,None,None,None,None,None,None,39,39,39,39,-39,39,39,39,39,-52,-49,-50,39,39,39,-51,]),'DESIGUAL':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[40,-42,-40,-41,40,-42,-32,-43,40,40,-19,-20,-21,-22,-23,None,None,None,None,None,None,40,40,40,40,-39,40,40,40,40,-52,-49,-50,40,40,40,-51,]),'AND':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[41,-42,-40,-41,41,-42,-32,-43,41,41,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,41,41,41,-39,41,41,41,41,-52,-49,-50,41,41,41,-51,]),'OR':([5,11,14,15,47,48,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,79,81,82,83,85,92,94,95,104,107,116,122,],[42,-42,-40,-41,42,-42,-32,-43,42,42,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,42,42,-39,42,42,42,42,-52,-49,-50,42,42,42,-51,]),'LLAVEDER':([6,8,9,27,28,43,59,88,105,106,109,111,112,113,115,117,118,119,125,126,127,128,129,130,],[-6,-8,-9,-4,-5,-7,-16,-15,-37,-37,-37,117,-37,119,121,-33,-38,-35,-37,-37,129,130,-34,-36,]),'ASIGNAR':([11,87,],[45,45,]),'PARDER':([14,15,46,47,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,89,90,91,92,94,95,103,108,116,120,122,],[-40,-41,-46,79,-42,-32,-43,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-11,-17,92,-47,-44,-39,94,95,97,98,99,-13,102,-12,-52,-49,-50,-45,-14,122,124,-51,]),'COMA':([14,15,48,49,50,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,82,89,92,94,95,104,122,],[-40,-41,-42,-32,-43,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,93,-39,96,101,-52,-49,-50,110,-51,]),'LLAVEIZQ':([97,99,102,123,124,],[105,106,109,125,126,]),'ELSE':([117,],[123,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,2,3,],[1,25,26,]),'sentencia':([0,2,3,105,106,109,112,125,126,],[2,2,2,112,112,112,112,112,112,]),'declaracion_funcion':([0,2,3,],[3,3,3,]),'asignacion':([0,2,3,57,105,106,109,112,114,125,126,],[4,4,4,86,4,4,4,4,120,4,4,]),'expresion':([0,2,3,12,13,16,24,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,52,53,54,55,56,93,96,100,105,106,109,110,112,125,126,],[5,5,5,47,49,50,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,78,81,82,83,78,85,78,104,107,5,5,5,116,5,5,5,]),'condicional':([0,2,3,105,106,109,112,125,126,],[6,6,6,6,6,6,6,6,6,]),'print':([0,2,3,105,106,109,112,125,126,],[7,7,7,7,7,7,7,7,7,]),'ciclo':([0,2,3,105,106,109,112,125,126,],[8,8,8,8,8,8,8,8,8,]),'sentencia_yield':([0,2,3,105,106,109,112,125,126,],[9,9,9,9,9,9,9,9,9,]),'argumentos_opcionales':([46,],[76,]),'expresiones_list':([46,55,93,],[77,84,103,]),'parametros_opcionales':([74,],[90,]),'parametros_list':([74,101,],[91,108,]),'bloque':([105,106,109,112,125,126,],[111,113,115,118,127,128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> <empty>','inicio',0,'p_inicio','yacc.py',352),
  ('inicio -> sentencia inicio','inicio',2,'p_inicio','yacc.py',353),
  ('inicio -> declaracion_funcion inicio','inicio',2,'p_inicio','yacc.py',354),
  ('sentencia -> asignacion PUNTOYCOMA','sentencia',2,'p_sentencia','yacc.py',364),
  ('sentencia -> expresion PUNTOYCOMA','sentencia',2,'p_sentencia','yacc.py',365),
  ('sentencia -> condicional','sentencia',1,'p_sentencia','yacc.py',366),
  ('sentencia -> print PUNTOYCOMA','sentencia',2,'p_sentencia','yacc.py',367),
  ('sentencia -> ciclo','sentencia',1,'p_sentencia','yacc.py',368),
  ('sentencia -> sentencia_yield','sentencia',1,'p_sentencia','yacc.py',369),
  ('declaracion_funcion -> DECREE IDENTIFICADOR PARIZQ parametros_opcionales PARDER LLAVEIZQ bloque LLAVEDER','declaracion_funcion',8,'p_declaracion_funcion','yacc.py',374),
  ('parametros_opcionales -> <empty>','parametros_opcionales',0,'p_parametros_opcionales','yacc.py',379),
  ('parametros_opcionales -> parametros_list','parametros_opcionales',1,'p_parametros_opcionales','yacc.py',380),
  ('parametros_list -> IDENTIFICADOR','parametros_list',1,'p_parametros_list','yacc.py',387),
  ('parametros_list -> IDENTIFICADOR COMA parametros_list','parametros_list',3,'p_parametros_list','yacc.py',388),
  ('sentencia_yield -> YIELD expresion PUNTOYCOMA','sentencia_yield',3,'p_sentencia_yield','yacc.py',395),
  ('sentencia_yield -> YIELD PUNTOYCOMA','sentencia_yield',2,'p_sentencia_yield','yacc.py',396),
  ('asignacion -> IDENTIFICADOR ASIGNAR expresion','asignacion',3,'p_asignacion','yacc.py',403),
  ('expresion -> expresion UNIR expresion','expresion',3,'p_expresion_unir','yacc.py',404),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion_binaria','yacc.py',405),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresion_binaria','yacc.py',406),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresion_binaria','yacc.py',407),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresion_binaria','yacc.py',408),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','yacc.py',409),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion_logica','yacc.py',411),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion_logica','yacc.py',412),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_logica','yacc.py',413),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_logica','yacc.py',414),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresion_logica','yacc.py',415),
  ('expresion -> expresion DESIGUAL expresion','expresion',3,'p_expresion_logica','yacc.py',416),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion_logica','yacc.py',417),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion_logica','yacc.py',418),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_logica','yacc.py',419),
  ('condicional -> IF PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER','condicional',7,'p_condicional','yacc.py',425),
  ('condicional -> IF PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER ELSE LLAVEIZQ bloque LLAVEDER','condicional',11,'p_condicional','yacc.py',426),
  ('ciclo -> WHILE PARIZQ expresion PARDER LLAVEIZQ bloque LLAVEDER','ciclo',7,'p_ciclo','yacc.py',432),
  ('ciclo -> FOR PARIZQ asignacion PUNTOYCOMA expresion PUNTOYCOMA asignacion PARDER LLAVEIZQ bloque LLAVEDER','ciclo',11,'p_ciclo','yacc.py',433),
  ('bloque -> <empty>','bloque',0,'p_bloque','yacc.py',437),
  ('bloque -> sentencia bloque','bloque',2,'p_bloque','yacc.py',438),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_parentesis','yacc.py',446),
  ('expresion -> CADENA','expresion',1,'p_expresion_literal_cadena','yacc.py',447),
  ('expresion -> NUMERO','expresion',1,'p_expresion_numero','yacc.py',448),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresion_identificador','yacc.py',449),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_uminus','yacc.py',450),
  ('expresiones_list -> expresion','expresiones_list',1,'p_expresiones_list','yacc.py',452),
  ('expresiones_list -> expresion COMA expresiones_list','expresiones_list',3,'p_expresiones_list','yacc.py',453),
  ('argumentos_opcionales -> <empty>','argumentos_opcionales',0,'p_argumentos_opcionales','yacc.py',460),
  ('argumentos_opcionales -> expresiones_list','argumentos_opcionales',1,'p_argumentos_opcionales','yacc.py',461),
  ('print -> PRINT PARIZQ expresiones_list PARDER','print',4,'p_print','yacc.py',469),
  ('expresion -> PARIAS PARIZQ IDENTIFICADOR PARDER','expresion',4,'p_funcion_parias','yacc.py',472),
  ('expresion -> INQUIRE PARIZQ expresion PARDER','expresion',4,'p_expresion_input','yacc.py',473),
  ('expresion -> CONQUISTAR PARIZQ expresion COMA expresion COMA expresion PARDER','expresion',8,'p_funcion_conquistar','yacc.py',474),
  ('expresion -> IDENTIFICADOR PARIZQ argumentos_opcionales PARDER','expresion',4,'p_expresion_llamada_funcion','yacc.py',480),
]
